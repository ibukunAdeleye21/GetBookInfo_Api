// <auto-generated />
using BookInfo.API.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookInfo.API.Migrations
{
    [DbContext(typeof(BookContextInfo))]
    [Migration("20231019152415_DataSeed")]
    partial class DataSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookInfo.API.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Section")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Empowering Visions for Aspiring Trailblazers.",
                            Section = "Leadership Book"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Unlocking Wealth Secrets for Financial Freedom",
                            Section = "Finance Books"
                        });
                });

            modelBuilder.Entity("BookInfo.API.Entities.PointOfInterest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("PointsOfInterest");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "John C. Maxwell",
                            BookId = 1,
                            Description = "Top notch piece.",
                            Name = "Leadership 101: What every leader needs to know."
                        },
                        new
                        {
                            Id = 2,
                            Author = "Andrew Roberts",
                            BookId = 1,
                            Description = "Lovely Book.",
                            Name = "Dare to Lead"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Robert Kiyosaki",
                            BookId = 2,
                            Description = "Fantastic Book.",
                            Name = "Rich Dad Poor Dad"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Sam Adeyemi",
                            BookId = 2,
                            Description = "Superb Book.",
                            Name = "Parable of Dollars"
                        });
                });

            modelBuilder.Entity("BookInfo.API.Entities.PointOfInterest", b =>
                {
                    b.HasOne("BookInfo.API.Entities.Book", "Book")
                        .WithMany("PointsOfInterest")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });

            modelBuilder.Entity("BookInfo.API.Entities.Book", b =>
                {
                    b.Navigation("PointsOfInterest");
                });
#pragma warning restore 612, 618
        }
    }
}
